name: Hibernate Reactive CI

on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:
    branches: master

jobs:
  test_postgresql:
    name: Test with PostgreSQL
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build and Test with PostgreSQL
      run: ./gradlew build -Pdocker -Pdb=pg

  test_mysql:      
    name: Test with MySQL
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build and Test with MySQL
      run: ./gradlew build -Pdocker -Pdb=mysql

  test_db2:      
    name: Test with DB2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build and Test with DB2
      run: ./gradlew build -Pdocker -Pdb=db2
      
  release:
    name: Release
    if: github.event_name == 'push' && startsWith( github.ref, 'refs/tags/' )
    runs-on: ubuntu-latest
    needs: [test_postgresql, test_mysql, test_db2]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Create maven package
      run: ./gradlew assemble
    - name: Publish release to Bintray
      env:
        ORG_GRADLE_PROJECT_bintrayUser: ${{ secrets.bintrayUser }}
        ORG_GRADLE_PROJECT_bintrayKey: ${{ secrets.bintrayKey }}
      run: ./gradlew bintrayUpload
