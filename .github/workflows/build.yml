name: Hibernate Reactive CI

on:
  push:
    branches:
      - master
  pull_request:
    branches: master

jobs:
  test_postgresql:
    name: Test with PostgreSQL
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build and Test with PostgreSQL
      run: ./gradlew build -Pdocker -Pdb=pg

  test_mysql:      
    name: Test with MySQL
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build and Test with MySQL
      run: ./gradlew build -Pdocker -Pdb=mysql

  test_db2:      
    name: Test with DB2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build and Test with DB2
      run: ./gradlew build -Pdocker -Pdb=db2
      
  build_package:      
    name: Build and create maven package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Detect the version of Hibernate Reactive
      id: detect-version
      run: |
        ./gradlew hibernate-reactive-core:properties | grep '^version:' | sed -E 's/version: (.*)/::set-output name=version::\1/'
    - name: Generate a unique version
      id: generate-unique-version
      env:
        UNIQUE_VERSION: ${{ format( '{0}-{1}', steps.detect-version.outputs.version, github.sha ) }}
      run: echo "::set-output name=version::$UNIQUE_VERSION"
    - name: Create maven package
      env:
        ORG_GRADLE_PROJECT_projectVersion: ${{ steps.generate-unique-version.outputs.version }}
      run: ./gradlew assemble publishToMavenLocal
    - name: Publish to GitHub Packages (SNAPSHOT only, push only, PR excluded)
      env:
        ORG_GRADLE_PROJECT_projectVersion: ${{ steps.generate-unique-version.outputs.version }}
        ORG_GRADLE_PROJECT_githubUser: ${{ github.actor }}
        ORG_GRADLE_PROJECT_githubToken: ${{ github.token }}
      if: endsWith( steps.detect-version.outputs.version, '-SNAPSHOT' ) && github.event_name == 'push'
      run: ./gradlew publish
