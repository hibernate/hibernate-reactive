# Run the build using the latest ORM 5.x snapshots
# so that we can spot integration issues early
name: Latest ORM 5.x

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run every hour at minute 25
    - cron: '25 * * * *'

jobs:
  # The examples test the Hibernate ORM Gradle plugin. We use it for bytecode enhancements.
  run_examples:
    name: Run examples in '${{ matrix.example }}' on ${{ matrix.db }} with latest ORM ${{ matrix.orm-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [ 'session-example', 'native-sql-example' ]
        orm-version: [ '[5.6,5.7)' ]
        db: ['MySQL', 'PostgreSQL']
        exclude:
          # 'native-sql-example' doesn't run on MySQL because it has native queries
          - example: 'native-sql-example'
            db: 'MySQL'
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql:8.0.27
        env:
          MYSQL_ROOT_PASSWORD: hreact
          MYSQL_DATABASE: hreact
          MYSQL_USER: hreact
          MYSQL_PASSWORD: hreact
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
      postgres:
        # Docker Hub image
        image: postgres:14.0
        env:
          POSTGRES_DB: hreact
          POSTGRES_USER: hreact
          POSTGRES_PASSWORD: hreact
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        with:
          java-version: 1.8
        uses: actions/setup-java@v1
      - name: Print the effective ORM version used
        run: ./gradlew :${{ matrix.example }}:dependencyInsight --dependency org.hibernate:hibernate-core -PhibernateOrmVersion='${{ matrix.orm-version }}' -PskipOrmVersionParsing -PenableJBossSnapshotsRep
      - name: Run examples in '${{ matrix.example }}' on ${{ matrix.db }}
        run: ./gradlew :${{ matrix.example }}:runAllExamplesOn${{ matrix.db }} -PhibernateOrmVersion='${{ matrix.orm-version }}' -PskipOrmVersionParsing -PenableJBossSnapshotsRep

  test_dbs:
    name: Test with ${{ matrix.db }} and ORM ${{ matrix.orm-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        orm-version: [ '[5.6,5.7)' ]
        db: [ 'MariaDB', 'MySQL', 'PostgreSQL', 'DB2', 'CockroachDB', 'MSSQLServer', 'Oracle' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Print the effective ORM version used
        run: ./gradlew :hibernate-reactive-core:dependencyInsight --dependency org.hibernate:hibernate-core -PhibernateOrmVersion='${{ matrix.orm-version }}' -PskipOrmVersionParsing -PenableJBossSnapshotsRep
      - name: Build and Test with ${{ matrix.db }}
        run: ./gradlew build -Pdb=${{ matrix.db }} -Pdocker -PhibernateOrmVersion='${{ matrix.orm-version }}' -PskipOrmVersionParsing -PenableJBossSnapshotsRep -PshowStandardOutput

