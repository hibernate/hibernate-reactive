name: Latest Vert.x 3

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run every hour at minute 25
    - cron: '25 * * * *'

jobs:
  # The examples test the Hibernate ORM Gradle plugin. We use it for bytecode enhancements.
  run_examples:
    name: Run examples in '${{ matrix.example }}' on ${{ matrix.db }} and latest Vert.x in ${{ matrix.vertx-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [ 'example', 'example2' ]
        orm-version: [ '[5.4,5.5)', '[5.5,5.6)' ]
        db: [ 'MySQL', 'PostgreSQL' ]
        vertx-version: [ '[3,4)' ]
        exclude:
          # 'example2' doesn't run on MySQL because it has native queries
          - example: 'example2'
            db: 'MySQL'
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: hreact
          MYSQL_DATABASE: hreact
          MYSQL_USER: hreact
          MYSQL_PASSWORD: hreact
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
      postgres:
        # Docker Hub image
        image: postgres:13.0
        env:
          POSTGRES_DB: hreact
          POSTGRES_USER: hreact
          POSTGRES_PASSWORD: hreact
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        with:
          java-version: 1.8
        uses: actions/setup-java@v1
      - name: Print the effective Vert.x version used
        run: ./gradlew :hibernate-reactive-core:dependencyInsight --dependency io.vertx -PvertxVersion='${{ matrix.vertx-version }}'
      - name: Run examples in '${{ matrix.example }}' on ${{ matrix.db }}
        run: ./gradlew :${{ matrix.example }}:runAllExamplesOn${{ matrix.db }} -PvertxVersion='${{ matrix.vertx-version }}'

  test_dbs:
    name: Test with ${{ matrix.db }} and latest Vert.x in ${{ matrix.vertx-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        vertx-version: ['[3,4)']
        db: [ 'MariaDB', 'MySQL', 'PostgreSQL', 'DB2', 'CockroachDB' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Print the effective Vert.x version used
        run: ./gradlew :hibernate-reactive-core:dependencyInsight --dependency io.vertx -PvertxVersion='${{ matrix.vertx-version }}'
      - name: Build and Test with ${{ matrix.db }}
        run: ./gradlew build -Pdb=${{ matrix.db }} -Pdocker -PvertxVersion='${{ matrix.vertx-version }}'
