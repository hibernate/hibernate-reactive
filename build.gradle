plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.diffplug.gradle.spotless' version '4.0.1'
    id 'nu.studer.credentials' version '2.1' apply false
    id 'com.jfrog.bintray' version '1.8.5' apply false
}

ext {
    projectVersionFile = file( "${rootProject.projectDir}/gradle/version.properties" )
    projectVersion = readVersionFromProperties( projectVersionFile )
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.diffplug.gradle.spotless'
    group = 'org.hibernate.reactive'
    version = projectVersion
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'UTF-8'

    repositories {
        // Only enable these for local development, never push it:
        // mavenLocal()
        // jcenter()
        mavenCentral()
    }
    
    ext.publishScript = rootProject.rootDir.absolutePath + '/publish.gradle'
}

// Versions which need to be aligned across modules; this also
// allows overriding the build using a parameter, which can be
// useful to monitor compatibility for upcoming versions on CI:
//
// ./gradlew clean build -PhibernateOrmVersion=5.4.9-SNAPSHOT

ext {
    hibernateOrmVersion = '5.4.17.Final'
}

private static String readVersionFromProperties(File file) {
    if ( !file.exists() ) {
        throw new GradleException( "Version file $file.canonicalPath does not exists" )
    }
    Properties versionProperties = new Properties()
    file.withInputStream {
        stream -> versionProperties.load( stream )
    }
    return versionProperties.projectVersion
}
