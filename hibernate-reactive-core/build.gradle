plugins {
    id "hr-java-library"
    id "hr-test-containers"
    id "hr-print-resolved-version"
}

ext {
    mavenPomName = 'Hibernate Reactive Core'
}

description = 'The core module of Hibernate Reactive'

apply from: publishScript

dependencies {

    api(libs.org.hibernate.orm.hibernate.core)

    api(libs.io.smallrye.reactive.mutiny)

    //Logging
    implementation(libs.org.jboss.logging.jboss.logging)
    annotationProcessor(libs.org.jboss.logging.jboss.logging)

    compileOnly(libs.org.jboss.logging.jboss.logging.annotations)
    annotationProcessor(libs.org.jboss.logging.jboss.logging.annotations)
    annotationProcessor(libs.org.jboss.logging.jboss.logging.processor)


    //Specific implementation details of Hibernate Reactive:
    implementation(libs.io.vertx.vertx.sql.client)

    // Testing
    testImplementation(libs.org.assertj.assertj.core)
    testImplementation(libs.io.vertx.vertx.junit5)

    // Drivers
    testImplementation(libs.io.vertx.vertx.pg.client)
    testImplementation(libs.io.vertx.vertx.mysql.client)
    testImplementation(libs.io.vertx.vertx.db2.client)
    testImplementation(libs.io.vertx.vertx.mssql.client)
    testImplementation(libs.io.vertx.vertx.oracle.client)

    // Metrics
    testImplementation(libs.io.vertx.vertx.micrometer.metrics)

    // Optional dependency of vertx-pg-client, essential when connecting via SASL SCRAM
    testImplementation(libs.com.ongres.scram.scram.client)

    // JUnit Jupiter
    testImplementation(libs.org.junit.jupiter.junit.jupiter.api)
    testRuntimeOnly(libs.org.junit.jupiter.junit.jupiter.engine)
    testRuntimeOnly(libs.org.junit.platform.junit.platform.launcher)

    // JDBC driver to test with ORM and PostgreSQL
    testRuntimeOnly(libs.org.postgresql.postgresql)

    // JDBC driver for Testcontainers with MS SQL Server
    testRuntimeOnly(libs.com.microsoft.sqlserver.mssql.jdbc)

    // JDBC driver for Testcontainers with MariaDB Server
    testRuntimeOnly(libs.org.mariadb.jdbc.mariadb.java.client)

    // JDBC driver for Testcontainers with MYSQL Server
    testRuntimeOnly(libs.com.mysql.mysql.connector.j)

    // JDBC driver for Db2 server, for testing
    testRuntimeOnly(libs.com.ibm.db2.jcc)

    // EHCache
    testRuntimeOnly(libs.org.ehcache.ehcache) {
            capabilities {
                requireCapability 'org.ehcache.modules:ehcache-xml-jakarta'
            }
    }
    testRuntimeOnly(libs.org.hibernate.orm.hibernate.jcache)

    // log4j
    testRuntimeOnly(libs.org.apache.logging.log4j.log4j.core)

    // Testcontainers
    testImplementation(libs.org.testcontainers.postgresql)
    testImplementation(libs.org.testcontainers.mysql)
    testImplementation(libs.org.testcontainers.mariadb)
    testImplementation(libs.org.testcontainers.db2)
    testImplementation(libs.org.testcontainers.cockroachdb)
    testImplementation(libs.org.testcontainers.mssqlserver)
    testImplementation(libs.org.testcontainers.oracle.xe)
}

// Reproducible Builds

// https://docs.gradle.org/current/userguide/working_with_files.html#sec:reproducible_archives
// Configure archive tasks to produce reproducible archives:
tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
