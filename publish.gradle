apply plugin: 'java'
apply plugin: 'maven-publish'

// Java / publishing

java {
    // Configure the Java "software component" to include javadoc and sources jars in addition to the classes jar.
    // Ultimately, this component is what makes up the publication for this project.
    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                // Basic JAR manifest attributes
                'Specification-Title': project.name,
                'Specification-Version': project.version,
                'Specification-Vendor': 'Hibernate.org',
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'Hibernate.org',
                'Implementation-Vendor-Id': 'org.hibernate',
                'Implementation-Url': 'http://hibernate.org/reactive',
        )
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

publishing {
    publications {
        register( "publishedArtifacts", MavenPublication) {
            from components.java

            pom {
                name = project.mavenPomName
                description = project.description
                url = 'https://github.com/hibernate/hibernate-reactive'
                organization {
                    name = 'Hibernate.org'
                    url = 'https://hibernate.org'
                }
                licenses {
                    license {
                        name = 'Apache License Version 2.0'
                        url = 'https://opensource.org/licenses/Apache-2.0'
                        comments = 'See discussion at http://hibernate.org/community/license/ for more details.'
                        distribution = 'repo'
                    }
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/hibernate/hibernate-reactive/issues'
                }
                scm {
                    connection = 'scm:git:ssh://git@github.com/hibernate/hibernate-reactive.git'
                    developerConnection = 'scm:git:ssh://git@github.com/hibernate/hibernate-reactive.git'
                    url = 'https://github.com/hibernate/hibernate-reactive.git'
                }
                developers {
                    developer {
                        id = 'hibernate-team'
                        name = 'The Hibernate Development Team'
                        organization = 'Hibernate.org'
                        organizationUrl = 'https://hibernate.org'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "staging"
            url = rootProject.layout.buildDirectory.dir("staging-deploy${File.separator}maven")
        }
        maven {
            name = 'snapshots'
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
            // So that Gradle uses the `ORG_GRADLE_PROJECT_snapshotsPassword` / `ORG_GRADLE_PROJECT_snapshotsUsername`
            //  env variables to read the username/password for the `snapshots` repository publishing:
            credentials(PasswordCredentials)
        }
    }
}
